#define DEBUG_NAME "ExampleSpec"
#include "FormattedDebug.h"
#include "sfall/sfall.h"
#include "sfall/lib.arrays.h"
/////////////////////////////

#include "Waterchip.h"

procedure start begin
    debug("------------- start begin --------------");
    debug1f("========[ %s ]=======", __waterchip_testsuite_currently_running_test_name);
    /////////////////////

    if __waterchip_testsuite_currently_running_test_name then begin
        debug3("", __waterchip__testsuite_name, __waterchip_testsuite_currently_running_test_name, "SETUP");
    end

    // Register a test
    // If the test has ALREADY been registered then it's time to RUN everything, yo.
    if (not __waterchip_testsuite_currently_running_tests) and scan_array(__waterchip_testsuite_data.test_names, "this test") > -1 and __waterchip__testsuite_times_run_tests_backup_test_var_to_verify_single_run == 0 then begin
        set_global_script_repeat(0); // turn it off!
        __waterchip__testsuite_times_run_tests_backup_test_var_to_verify_single_run++; // extra protection from multiple invocations
        __waterchip_testsuite_currently_running_tests = true;
        debug("~~~~~~~~~~~~~~~~~~~~~~~");
        debug1("running all tests in suite", __waterchip__testsuite_name);
        foreach __waterchip_testsuite_currently_running_test_name in (__waterchip_testsuite_data.test_names) begin
            debug2("run test from loop", __waterchip__testsuite_name, __waterchip_testsuite_currently_running_test_name);
            call start;
        end
        debug("~~~~~~~~~~~~~~~~~~~~~~~");
        debug("~~~~~~~~~~~ DONE RUNNING TESTS ~~~~~~~~~~~~");
        return;
    end
    if not waterchip_data then waterchip_data = __waterchip_data;
    if not __waterchip_testsuite_data then begin
        __waterchip_testsuite_data = {};
        fix_array(__waterchip_testsuite_data);
        waterchip_data[__waterchip__testsuite_name] = __waterchip_testsuite_data;
        __waterchip_testsuite_data.test_names = [];
        fix_array(__waterchip_testsuite_data.test_names);
        __waterchip_testsuite_data.test_results = {};
        fix_array(__waterchip_testsuite_data.test_results);
    end
    if scan_array(__waterchip_testsuite_data.test_names, "this test") == -1 then begin
        debug2("REGISTER test", __waterchip__testsuite_name, "this test");
        call array_push(__waterchip_testsuite_data.test_names, "this test");
    end else if __waterchip_testsuite_currently_running_tests and __waterchip_testsuite_currently_running_test_name == "this test" then begin
        debug2("RUN test", __waterchip__testsuite_name, "this test");
    end
    if not __waterchip_testsuite_repeat_initialized then begin
        __waterchip_testsuite_repeat_initialized = true;
        set_global_script_repeat(1); // Run in 1 frame
    end

    // Register a test
    // If the test has ALREADY been registered then it's time to RUN everything, yo.
    if (not __waterchip_testsuite_currently_running_tests) and scan_array(__waterchip_testsuite_data.test_names, "another test") > -1 and __waterchip__testsuite_times_run_tests_backup_test_var_to_verify_single_run == 0 then begin
        set_global_script_repeat(0); // turn it off!
        __waterchip__testsuite_times_run_tests_backup_test_var_to_verify_single_run++; // extra protection from multiple invocations
        __waterchip_testsuite_currently_running_tests = true;
        debug("~~~~~~~~~~~~~~~~~~~~~~~");
        debug1("running all tests in suite", __waterchip__testsuite_name);
        foreach __waterchip_testsuite_currently_running_test_name in (__waterchip_testsuite_data.test_names) begin
            debug2("run test from loop", __waterchip__testsuite_name, __waterchip_testsuite_currently_running_test_name);
            call start;
        end
        debug("~~~~~~~~~~~~~~~~~~~~~~~");
        debug("~~~~~~~~~~~ DONE RUNNING TESTS ~~~~~~~~~~~~");
        return;
    end
    if not waterchip_data then waterchip_data = __waterchip_data;
    if not __waterchip_testsuite_data then begin
        __waterchip_testsuite_data = {};
        fix_array(__waterchip_testsuite_data);
        waterchip_data[__waterchip__testsuite_name] = __waterchip_testsuite_data;
        __waterchip_testsuite_data.test_names = [];
        fix_array(__waterchip_testsuite_data.test_names);
        __waterchip_testsuite_data.test_results = {};
        fix_array(__waterchip_testsuite_data.test_results);
    end
    if scan_array(__waterchip_testsuite_data.test_names, "another test") == -1 then begin
        debug2("REGISTER test", __waterchip__testsuite_name, "another test");
        call array_push(__waterchip_testsuite_data.test_names, "another test");
    end else if __waterchip_testsuite_currently_running_tests and __waterchip_testsuite_currently_running_test_name == "another test" then begin
        debug2("RUN test", __waterchip__testsuite_name, "another test");
    end
    if not __waterchip_testsuite_repeat_initialized then begin
        __waterchip_testsuite_repeat_initialized = true;
        set_global_script_repeat(1); // Run in 1 frame
    end

    if __waterchip_testsuite_currently_running_test_name then begin
        debug3("", __waterchip__testsuite_name, __waterchip_testsuite_currently_running_test_name, "TEARDOWN");
    end

    /////////////////////
    debug1f("========[ %s ]=======", __waterchip_testsuite_currently_running_test_name);
    debug("------------- start end --------------");
end