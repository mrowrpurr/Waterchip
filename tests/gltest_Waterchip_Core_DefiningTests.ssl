#include "Waterchip/TestHelper.h"

import_test_data(WaterchipTestExamples_UsingCoreMacros)

#define get_test(test_suite, test_name) \
    (first_equal_map_field_value(test_suite.tests, "name", test_name))

procedure first_equal_map_field_value(variable array, variable key_name, variable desired_value) begin
    variable element;
    foreach element in array begin
        if get_key_or_none(element, key_name) == desired_value then
            return element;
    end
    return {};
end

describe("Defining Waterchip test suites using describe_proc") begin

    variable test_data = WaterchipTestExamples_UsingCoreMacros;
    variable test_suites = test_data.test_suites;
    variable suite_empty = get_key_or_none(test_suites, "Empty describe");
    variable suite_skipped_tests = get_key_or_none(test_suites, "Skipped tests");
    variable suite_one_pass_one_fail = get_key_or_none(test_suites, "One Pass, One Fail");
    variable test;

    it("can get test suite names") begin
        expect(test_suites) to_contain_key("Empty describe");        
        expect(test_suites) to_contain_key("Skipped tests");
        expect(test_suites) to_contain_key("One Pass, One Fail");
    end

    it("can get test counts") begin
        expect(suite_empty.tests) to_be_empty;
        expect(suite_skipped_tests.tests) to_have_length(2);
        expect(suite_one_pass_one_fail.tests) to_have_length(2);
    end

    it("can get test names") begin
        expect(suite_skipped_tests.tests[0].name) to_equal("I am a todo without body!");
        expect(suite_skipped_tests.tests[1].name) to_equal("I am a todo!");
        expect(suite_one_pass_one_fail.tests[0].name) to_equal("this should pass");
        expect(suite_one_pass_one_fail.tests[1].name) to_equal("this should fail");
    end

    it("can get test results") begin
        test = get_test(suite_skipped_tests, "I am a todo!");
        expect(test.status) to_equal("SKIP");

        // test = get_test(suite_one_pass_one_fail, "this should pass");
        // expect(test.status) to_equal("PASS");

        // test = get_test(suite_one_pass_one_fail, "this should fail");
        // expect(test.status) to_equal("FAIL");
    end

    todo("can get test error messages");
    todo("can get test error expectation count");
    todo("can get all printed output");

end
